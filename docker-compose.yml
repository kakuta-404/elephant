services:
  spark-master:
    image: bde2020/spark-master:3.3.0-hadoop3.3
    container_name: spark-master
    environment:
      - SPARK_MASTER_PORT=7077
      - SPARK_MASTER_WEBUI_PORT=8080
    ports:
      - "8080:8080"
      - "7077:7077"
    volumes:
      - ./spark-conf:/opt/hadoop/etc/hadoop:ro
      - ./java-spark-app/target/:/opt/spark-app
    networks: [bigdata]

  spark-worker-1:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker-1
    environment:
      - SPARK_MASTER=spark://spark-master:7077
    depends_on: [spark-master]
    ports:
      - "8081:8081"
    volumes:
      - ./spark-conf:/opt/hadoop/etc/hadoop:ro
    networks: [bigdata]


  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    hostname: namenode
    ports:
      - "9870:9870"  
      - "9000:9000"  
    environment:
      - CLUSTER_NAME=test-cluster 
      - JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64 
    env_file:
      - parquet-loader/hdfs.env 
    networks: [bigdata]

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    hostname: datanode
    depends_on:
      - namenode  
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000  
    env_file:
      - parquet-loader/hdfs.env 
    networks: [bigdata]
  downloader:
    build:
      context: ./parquet-loader
      dockerfile: Dockerfile
    container_name: hdfs-ingestor
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - namenode
      - datanode
    networks: [bigdata]


networks:
  bigdata: {}